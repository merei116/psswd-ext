import os, sys, shutil, subprocess, tempfile, tkinter as tk
from tkinter import filedialog, messagebox
from pathlib import Path

APPNAME = "Password Guardian"

def choose_csv():
    tk.Tk().withdraw()
    path = filedialog.askopenfilename(
        title="–í—ã–±–µ—Ä–∏—Ç–µ —ç–∫—Å–ø–æ—Ä—Ç –ø–∞—Ä–æ–ª–µ–π (CSV –∏–ª–∏ JSON)",
        filetypes=[("CSV/JSON", "*.csv *.json")]
    )
    return Path(path) if path else None

def run(cmd, cwd=None):
    print(f"\n> –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: {' '.join(cmd)}")
    p = subprocess.run(cmd, cwd=cwd, shell=True)
    if p.returncode:
        print("‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:", cmd)
        messagebox.showerror(APPNAME, f"–ö–æ–º–∞–Ω–¥–∞ {' '.join(cmd)} –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π")
        sys.exit(1)
    else:
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ")

def main():
    messagebox.showinfo(APPNAME, "–°–µ–π—á–∞—Å –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —ç–∫—Å–ø–æ—Ä—Ç–∞ —Å–≤–æ–∏—Ö –ø–∞—Ä–æ–ª–µ–π.")
    csv = choose_csv()
    if not csv:
        sys.exit(0)

    print("üìÅ –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ä–∞–±–æ—á—É—é –ø–∞–ø–∫—É...")
    work = Path(tempfile.mkdtemp(prefix="pg-"))
    print(f"üóÇÔ∏è  –í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {work}")

    src = Path(sys._MEIPASS) / "extension-src"
    print("üì¶ –ö–æ–ø–∏—Ä—É–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ...")
    shutil.copytree(src, work / "ext", dirs_exist_ok=True)

    print("üì¶ –ö–æ–ø–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å...")
    model_dir = work / "model"
    shutil.copytree(Path(sys._MEIPASS) / "model", model_dir, dirs_exist_ok=True)

    print("üß† –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ + –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤...")
    run([
        "python", "train_password_lstm.py",
        "--data", str(csv),
        "--col", "-1",
        "--epochs", "6",
        "--load_ckpt", "base.pth",
        "--export_onnx", "personal_lstm.onnx",
        "--patterns", "patterns.json"
    ], cwd=model_dir)

    print("üìÇ –ö–æ–ø–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—É—á–µ–Ω–∏—è...")
    assets = work / "ext" / "src" / "assets"
    assets.mkdir(parents=True, exist_ok=True)
    shutil.copy(model_dir / "personal_lstm.json", assets / "char_to_idx.json")
    shutil.copy(model_dir / "patterns.json", assets / "patterns.json")

    print("üõ†Ô∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    run(["npm", "install"], cwd=work / "ext")

    print("üèóÔ∏è –°–æ–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ...")
    run(["npm", "run", "build"], cwd=work / "ext")

    dist = work / "ext"
    print("\n‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ!")
    print(f"üìÇ –ó–∞–π–¥–∏ –≤ chrome://extensions –∏ –∑–∞–≥—Ä—É–∑–∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω—É—é –ø–∞–ø–∫—É:\n‚Üí {dist}\n")

    messagebox.showinfo(APPNAME,
        f"–ú–æ–¥–µ–ª—å –æ–±—É—á–µ–Ω–∞!\n\n–¢–µ–ø–µ—Ä—å –∑–∞–π–¥–∏ –≤ chrome://extensions –∏ –∑–∞–≥—Ä—É–∑–∏ —ç—Ç—É –ø–∞–ø–∫—É –∫–∞–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ:\n\n{dist}\n\n(–ù–∞–∂–º–∏ ¬´–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ¬ª)")

if __name__ == "__main__":
    main()
